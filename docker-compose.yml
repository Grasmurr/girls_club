version: '3.8'

services:
  telegram_bot:
    build:
      context: ./telegram_bot
    depends_on:
      - djangoapp
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=amqp://guest:guest@rabbitmq:5672//
    networks:
      - mynetwork

  djangoapp:
    build:
      context: ./girlsclub
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://admin:prod@db:5432/postgres
    ports:
      - "8000:8000"
    networks:
      - mynetwork

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=prod
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672" # AMQP протокол
      - "15672:15672" # Web management interface
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mynetwork
    restart: always

  celery_worker:
    build:
      context: ./telegram_bot
    command: celery -A telegram_bot.celery.app worker --loglevel=info --pool=gevent
    depends_on:
      - telegram_bot
      - rabbitmq
    networks:
      - mynetwork
    restart: always

  celery_beat:
    build:
      context: ./telegram_bot
    command: celery -A telegram_bot.celery.app beat --loglevel=info
    depends_on:
      - telegram_bot
      - rabbitmq
    networks:
      - mynetwork
    restart: always


volumes:
  pg_data:
  rabbitmq_data:

networks:
  mynetwork:
    driver: bridge
